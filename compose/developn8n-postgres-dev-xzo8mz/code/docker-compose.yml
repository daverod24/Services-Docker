services:
  postgres:
    image: postgres:16-alpine
    restart: always
    hostname: postgres-dev
    container_name: postgres-dev
    env_file: .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '7432:5432'
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U ${POSTGRES_USER}
      interval: 10s
      timeout: 5s
      retries: 5
    command: |
      postgres -c max_connections=1000 -c listen_addresses=0.0.0.0
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dokploy-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.developn8n-postgres-dev-xzo8mz-11-web.rule=Host(`developn8n-postgres-dev-xzo8mz-27e509-38-25-66-165.traefik.me`)
      - traefik.http.routers.developn8n-postgres-dev-xzo8mz-11-web.entrypoints=web
      - traefik.http.services.developn8n-postgres-dev-xzo8mz-11-web.loadbalancer.server.port=5432
      - traefik.http.routers.developn8n-postgres-dev-xzo8mz-11-web.service=developn8n-postgres-dev-xzo8mz-11-web
  adminer:
    image: adminer:4
    container_name: adminer
    restart: always
    ports:
      - '8084:8080'
    networks:
      - dokploy-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.developn8n-postgres-dev-xzo8mz-10-web.rule=Host(`developn8n-postgres-dev-xzo8mz-beb953-38-25-66-165.traefik.me`)
      - traefik.http.routers.developn8n-postgres-dev-xzo8mz-10-web.entrypoints=web
      - traefik.http.services.developn8n-postgres-dev-xzo8mz-10-web.loadbalancer.server.port=8080
      - traefik.http.routers.developn8n-postgres-dev-xzo8mz-10-web.service=developn8n-postgres-dev-xzo8mz-10-web
  pgweb:
    image: sosedoff/pgweb:0.16.2
    container_name: pgweb
    environment:
      PGWEB_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-dev:5432/${POSTGRES_DB}?sslmode=disable
    ports:
      - '8085:8081'
    networks:
      - dokploy-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test:
        - CMD
        - nc
        - '-vz'
        - 127.0.0.1
        - '8081'
      interval: 5s
    labels:
      - traefik.enable=true
      - traefik.http.routers.developn8n-postgres-dev-xzo8mz-9-web.rule=Host(`developn8n-postgres-dev-xzo8mz-701a65-38-25-66-165.traefik.me`)
      - traefik.http.routers.developn8n-postgres-dev-xzo8mz-9-web.entrypoints=web
      - traefik.http.services.developn8n-postgres-dev-xzo8mz-9-web.loadbalancer.server.port=8081
      - traefik.http.routers.developn8n-postgres-dev-xzo8mz-9-web.service=developn8n-postgres-dev-xzo8mz-9-web
networks:
  dokploy-network:
    external: true
volumes:
  postgres_data: null
